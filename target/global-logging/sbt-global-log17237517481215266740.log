[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Oracle Corporation Java 19)
[debug] Load.defaultLoad until apply took 325.3305ms
[debug]           Load.loadUnit: plugins took 299.9192ms
[debug]           Load.loadUnit: defsScala took 0.4751ms
[debug] [Loading] Scanning directory C:\Users\Consultant\IdeaProjects\sclala_spark1\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Consultant\IdeaProjects\sclala_spark1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 42.8721 ms
[debug]               Load.resolveProject(sclala_spark1-build) took 138.2696ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sclala_spark1-build, base: C:\Users\Consultant\IdeaProjects\sclala_spark1\project, plugins: List(<none>))) took 265.3842ms
[debug] [Loading] Done in C:\Users\Consultant\IdeaProjects\sclala_spark1\project, returning: (sclala_spark1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 349.6064ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.3738ms
[debug]         Load.loadUnit(file:/C:/Users/Consultant/IdeaProjects/sclala_spark1/project/, ...) took 666.2505ms
[debug]       Load.apply: load took 1122.3098ms
[debug]       Load.apply: resolveProjects took 11.2759ms
[debug]       Load.apply: finalTransforms took 164.7966ms
[debug]       Load.apply: config.delegates took 28.6999ms
[debug]       Load.apply: Def.make(settings)... took 1375.0232ms
[debug]       Load.apply: structureIndex took 291.7528ms
[debug]       Load.apply: mkStreams took 2.4378ms
[info] loading project definition from C:\Users\Consultant\IdeaProjects\sclala_spark1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6330.3699ms
[debug]     Load.loadUnit: defsScala took 0.0112ms
[debug] [Loading] Scanning directory C:\Users\Consultant\IdeaProjects\sclala_spark1
[debug]       Load.loadUnit: mkEval took 7.8556ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.8559 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 5.8539ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Consultant\IdeaProjects\sclala_spark1, plugins: List(<none>))) took 34.6726ms
[debug] [Loading] Done in C:\Users\Consultant\IdeaProjects\sclala_spark1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 8699.6653ms
[debug]     Load.loadUnit: cleanEvalClasses took 58.6064ms
[debug]   Load.loadUnit(file:/C:/Users/Consultant/IdeaProjects/sclala_spark1/, ...) took 15091.4637ms
[debug] Load.apply: load took 15196.7162ms
[debug] Load.apply: resolveProjects took 0.1428ms
[debug] Load.apply: finalTransforms took 51.3332ms
[debug] Load.apply: config.delegates took 0.5322ms
[debug] Load.apply: Def.make(settings)... took 373.031ms
[debug] Load.apply: structureIndex took 161.2677ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to scalaspark (in build file:/C:/Users/Consultant/IdeaProjects/sclala_spark1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-d6feebae08053f696e49
[debug] Writing bsp connection file
[info] started sbt server
